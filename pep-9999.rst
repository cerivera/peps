PEP: 9999
Title: Pattern matching
Version: $Revision$
Last-Modified: $Date$
Author: Ivan Levkivskyi <levkivskyi at gmail.com>
BDFL-Delegate:
Discussions-To: Python-Dev <python-dev@python.org>
Status: Draft
Type: Standards Track
Content-Type: text/x-rst
Created: 2020-05-04
Python version: 3.10
Resolution:

Abstract
========

...


Motivation
==========

...


Rationale
=========

...


Syntax and Semantics
====================

Match arms
----------

This will be statement, not expression.

There can be more than one arm per block

Match semantics
---------------

First in chain of ``if ... elif ... elif ...``

Note: this this not a switch statement.


Allowed patterns
----------------


Class patterns
--------------


Guards
------


Matching names
--------------


Named sub-matches
-----------------


Keyword shorthand
-----------------


Ad-hoc matches
--------------

Python is pragmatic -> ad-hoc special-casing


Runtime specification
=====================

The ``__match__()`` protocol
----------------------------


Impossible matches
-------------------


Default ``object.__match__()``
------------------------------


Dataclasses
-----------


Builtins and standard library
-----------------------------


Static checkers specification
=============================

Exhaustiveness checks
---------------------


Sealed classes as ADTs
----------------------


Type erasure
------------


Backwards Compatibility
=======================

This PEP is fully backwards compatible.


Reference Implementation
========================

None yet.


Rejected Ideas
==============


References
==========


Copyright
=========

This document is placed in the public domain or under the
CC0-1.0-Universal license, whichever is more permissive.



..
   Local Variables:
   mode: indented-text
   indent-tabs-mode: nil
   sentence-end-double-space: t
   fill-column: 70
   coding: utf-8
   End:
